[{"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx":"1","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts":"2","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx":"3","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts":"4","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx":"5","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts":"6","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx":"7","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts":"8","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts":"9","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts":"10","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts":"11","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts":"12","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts":"13","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx":"14","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx":"15","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts":"16","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx":"17","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx":"18","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx":"19","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx":"20","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx":"21","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx":"22","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts":"23","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx":"24","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx":"25"},{"size":595,"mtime":1608736945793,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1608479304781,"results":"28","hashOfConfig":"27"},{"size":259,"mtime":1608797788843,"results":"29","hashOfConfig":"27"},{"size":409,"mtime":1608621780327,"results":"30","hashOfConfig":"27"},{"size":595,"mtime":1608713741674,"results":"31","hashOfConfig":"27"},{"size":477,"mtime":1608821918358,"results":"32","hashOfConfig":"27"},{"size":1699,"mtime":1608809813963,"results":"33","hashOfConfig":"27"},{"size":359,"mtime":1608558895221,"results":"34","hashOfConfig":"27"},{"size":950,"mtime":1608808666297,"results":"35","hashOfConfig":"27"},{"size":507,"mtime":1608815057839,"results":"36","hashOfConfig":"27"},{"size":509,"mtime":1608808504129,"results":"37","hashOfConfig":"27"},{"size":1466,"mtime":1608815288581,"results":"38","hashOfConfig":"27"},{"size":703,"mtime":1608812654184,"results":"39","hashOfConfig":"27"},{"size":2090,"mtime":1608821674639,"results":"40","hashOfConfig":"27"},{"size":2983,"mtime":1608809530542,"results":"41","hashOfConfig":"27"},{"size":960,"mtime":1608691560363,"results":"42","hashOfConfig":"27"},{"size":329,"mtime":1608824097986,"results":"43","hashOfConfig":"27"},{"size":1693,"mtime":1608810773268,"results":"44","hashOfConfig":"27"},{"size":2286,"mtime":1608822082409,"results":"45","hashOfConfig":"27"},{"size":1879,"mtime":1608792662450,"results":"46","hashOfConfig":"27"},{"size":1059,"mtime":1608801489263,"results":"47","hashOfConfig":"27"},{"size":2477,"mtime":1608807760872,"results":"48","hashOfConfig":"27"},{"size":188,"mtime":1608796405720,"results":"49","hashOfConfig":"27"},{"size":4269,"mtime":1608821706966,"results":"50","hashOfConfig":"27"},{"size":2253,"mtime":1608909346960,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1j9vyrn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx",[],["110","111"],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx",["112"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\ntype routerItemType = {\r\n  path: string;\r\n  component: any;\r\n};\r\n\r\nconst RouterView: React.FC = (): any => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item: routerItemType,index:number) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts",["113"],"import Home from \"../pages/home/Home\";\r\nimport TopicDetail from \"../pages/topicdetail/TopicDetail\";\r\nimport Profile from \"../pages/profile/Profile\";\r\nimport createTheme from '../pages/createtheme/createTheme'\r\nexport default [\r\n  {\r\n    path: \"/home\",\r\n    component: Home,\r\n  },\r\n  {\r\n    path: \"/topic/detail/:id\",\r\n    component: TopicDetail,\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    component: Profile,\r\n  },\r\n  {\r\n    path: \"/theme\",\r\n    component: createTheme,\r\n  },\r\n];\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx",["114"],"import React, { useEffect, useState, memo } from \"react\";\r\nimport \"./home.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { getHomePageDate } from \"../../store/actionCreator\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport Card from \"./card/Card\";\r\nimport RightContent from \"./rightcomtent/RightComtent\";\r\ntype propsType = {\r\n  name?: string;\r\n  requestHomePageData: (params: requestParamsType) => void;\r\n  requestUserInfo: (params: requestParamsType) => void;\r\n  homeData: AxiosResponse;\r\n};\r\ntype requestParamsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\nconst Home: React.FC<propsType> = (props) => {\r\n  const [homeDataArr, setHomeDataArr] = useState<any | null>(null);\r\n  useEffect(() => {\r\n    props.requestHomePageData({\r\n      url: \"topics\",\r\n      type: \"GET\",\r\n      data: {\r\n        mdrender: false,\r\n      },\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setHomeDataArr(props.homeData ? props.homeData.data.data : null);\r\n  }, [props.homeData]);\r\n  return (\r\n    <div className=\"home\">\r\n      <Navigation />\r\n      <Card\r\n        cardDataArr={homeDataArr}\r\n        changeContent={props.requestHomePageData}\r\n      />\r\n      <RightContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    homeData: state.homePageDate,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    requestHomePageData(requestParams: requestParamsType): void {\r\n      const getHomePageDateAction = getHomePageDate(requestParams);\r\n      dispatch(getHomePageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Home));\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx",["115"],"import React, { useEffect } from \"react\";\r\nimport \"./topicdetail.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetailPageDate } from \"../../store/actionCreator\";\r\nimport { Card } from \"antd\";\r\nimport Header from './Header'\r\nimport Replies from './replies/Replies'\r\ntype propsType = {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n  dispatchDetailDataAction: (payload:object)=>void;\r\n  detailData: any;\r\n};\r\nconst TopicDetail: React.FC<propsType> = (props: propsType) => {\r\n  useEffect(() => {\r\n    props.dispatchDetailDataAction({\r\n      url: `/topic/${props.match.params.id}`,\r\n      type: \"GET\",\r\n    });\r\n  }, [props.match.params.id]);\r\n  return (\r\n    <div className=\"topic-detail\">\r\n      <Navigation />\r\n      {\r\n        props.detailData?(<><Header titleData={props.detailData} />\r\n          <Card title={\"\"} bordered={false} style={{ width:1270,marginLeft:70 }}>\r\n            {props.detailData ? (\r\n              <div\r\n              className='center-card'\r\n                dangerouslySetInnerHTML={{\r\n                  __html: props.detailData.data.data.content,\r\n                }}\r\n              ></div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n          <Replies repliesCount={props.detailData.data.data.reply_count}\r\n          repliesArr={props.detailData.data.data.replies}/>\r\n          </>):''\r\n      }\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    detailData: state.detailData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchDetailDataAction(payload: object) {\r\n      const getDetailPageDateAction = getDetailPageDate(payload);\r\n      dispatch(getDetailPageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicDetail);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx",["116"],"import React from \"react\";\r\nimport getTime from \"../../utils/getTime\";\r\nimport { connect } from 'react-redux'\r\ntype propsType = {\r\n  titleData: any;\r\n  isLogin:boolean\r\n};\r\nconst Header: React.FC<propsType> = ({ titleData,isLogin }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"title\">\r\n        {titleData && titleData.data.data.top ? (\r\n          <span className=\"top\">置顶</span>\r\n        ) : (\r\n          <span className=\"share\">分享</span>\r\n        )}\r\n        {titleData ? titleData.data.data.title : \"\"}\r\n      </div>\r\n      <div className=\"info\">\r\n        {\r\n          titleData &&\r\n            `●发布于 ${getTime(titleData.data.data.create_time)} ●作者 ${\r\n              titleData.data.data.author.loginname\r\n            } ●${titleData.data.data.visit_count} 次浏览`\r\n        }\r\n      </div>\r\n      {\r\n        isLogin?<a className='collect'>收藏</a>:''\r\n      }\r\n    </div>\r\n  );\r\n};\r\nconst mapState=(state:any)=>{\r\n  return {\r\n    isLogin:state.isLogin\r\n  }\r\n}\r\nexport default connect(mapState)(Header);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx",["117"],"import React, { createElement, useState, useEffect } from \"react\";\r\nimport { Comment, Tooltip, Avatar, Card, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport getTime from \"../../../utils/getTime\";\r\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\";\r\nconst { TextArea } = Input;\r\ntype propsType = {\r\n  repliesCount: number;\r\n  repliesArr: any[];\r\n  isLogin: boolean;\r\n};\r\nconst Replies: React.FC<propsType> = (props) => {\r\n  \r\n  const [likes, setLikes] = useState<number | string>(0);\r\n  const [action, setAction] = useState<null | string>(null);\r\n\r\n  const like = () => {\r\n    setLikes(1);\r\n    setAction(\"liked\");\r\n  };\r\n\r\n  const actions = props.isLogin\r\n    ? [\r\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n          <span onClick={like}>\r\n            {createElement(action === \"liked\" ? LikeFilled : LikeOutlined)}\r\n            <span className=\"comment-action\">{likes}</span>\r\n          </span>\r\n        </Tooltip>,\r\n      ]\r\n    : [];\r\n  return (\r\n    <div className=\"repiles\">\r\n      <Card\r\n        title={`${props.repliesCount} 回复`}\r\n        bordered={false}\r\n        style={{ width: 1270, marginLeft: 70 }}\r\n      >\r\n        {props.repliesArr.map((item, index) => (\r\n          <Comment\r\n            key={index}\r\n            actions={actions}\r\n            author={item.author.loginname}\r\n            avatar={\r\n              <Avatar\r\n                src={item.author.avatar_url}\r\n                alt={item.author.loginname}\r\n              />\r\n            }\r\n            content={\r\n              <p\r\n                key={index}\r\n                dangerouslySetInnerHTML={{ __html: item.content }}\r\n              ></p>\r\n            }\r\n            datetime={\r\n              <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n                <span>{getTime(item.create_at)}</span>\r\n              </Tooltip>\r\n            }\r\n          />\r\n        ))}\r\n      </Card>\r\n      {props.isLogin ? (\r\n        <>\r\n          <div className=\"input-header\">添加回复</div>\r\n          <TextArea\r\n            style={{ width: 1270, marginLeft: 70, border: \"none\" }}\r\n            rows={8}\r\n          />\r\n          <div className=\"input-button\">\r\n            <button>回复</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state: any) => {\r\n  return {\r\n    isLogin: state.isLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapState)(Replies);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx",["118"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { getUserInfo } from \"../../store/actionCreator\";\r\nimport RightContent from \"../home/rightcomtent/RightComtent\";\r\nimport ProfileImg from '../../assets/imgs/profile.png'\r\nimport getTime from '../../utils/getTime'\r\nimport { Card } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype paramsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\n\r\ntype propsType = {\r\n  userInfo: AxiosResponse;\r\n  dispatchUserInfo: (payload: paramsType) => void;\r\n};\r\n\r\nconst Profile: React.FC<propsType> = ({\r\n  userInfo = { data: { data: { githubUsername: \"zc\" } } },\r\n  dispatchUserInfo,\r\n}) => {\r\n  useEffect(() => {\r\n    dispatchUserInfo({\r\n      url: \"/user/wszcc\",\r\n      type: \"GET\",\r\n      data: {},\r\n    });\r\n    console.log(userInfo);\r\n  }, [userInfo.data.data.githubUsername]);\r\n  return (\r\n    <div className=\"profile\">\r\n      <Navigation />\r\n      <RightContent />\r\n      {userInfo.data.data.githubUsername === \"wszcc\" ? (\r\n        <>\r\n          <Card\r\n            title=\"主页\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            <p className='profile-img'>\r\n              <img src={ProfileImg} alt=\"\" /><span>{userInfo.data.data.loginname}</span>\r\n            </p>\r\n            <p>{userInfo.data.data.score} 积分</p>\r\n            <p>注册时间 {getTime(userInfo.data.data.create_at)}</p>\r\n          </Card>\r\n          <Card\r\n            title=\"最近创建的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n               {userInfo.data.data.recent_topics\r\n          ? userInfo.data.data.recent_topics.map((item:any) => (\r\n              <li key={item.id}>\r\n                <div className=\"img\">\r\n                  <img src={item.author.avatar_url} alt=\"\" />\r\n                </div>\r\n                <span className=\"type\">\r\n                  {item.top ? (\r\n                    <span className=\"top\">置顶</span>\r\n                  ) : (\r\n                    <span className=\"share\">分享</span>\r\n                  )}\r\n                </span>\r\n                <Link to={`/topic/detail/${item.id}`}><span className=\"context\">{item.title}</span></Link>\r\n                <div className=\"left-img\">\r\n                  <img src={item.author.avatar_url} alt=\"\" />\r\n                </div>\r\n                <span className=\"time\">{getTime(item.create_at)}</span>\r\n              </li>\r\n            ))\r\n          : \"\"}\r\n          </Card>\r\n          <Card\r\n            title=\"最近参与的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n               {userInfo.data.data.recent_replies\r\n          ? userInfo.data.data.recent_replies.map((item:any) => (\r\n              <li key={item.id}>\r\n                <div className=\"img\">\r\n                  <img src={item.author.avatar_url} alt=\"\" />\r\n                </div>\r\n                <span className=\"type\">\r\n                  {item.top ? (\r\n                    <span className=\"top\">置顶</span>\r\n                  ) : (\r\n                    <span className=\"share\">分享</span>\r\n                  )}\r\n                </span>\r\n                <Link to={`/topic/detail/${item.id}`}><span className=\"context\">{item.title}</span></Link>\r\n                <div className=\"left-img\">\r\n                  <img src={item.author.avatar_url} alt=\"\" />\r\n                </div>\r\n                <span className=\"time\">{getTime(item.last_reply_at)}</span>\r\n              </li>\r\n            ))\r\n          : \"\"}\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchUserInfo(payload: paramsType) {\r\n      const disUserInfoAction = getUserInfo(payload);\r\n      dispatch(disUserInfoAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx",["119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":5,"column":1,"nodeType":"130","endLine":22,"endColumn":3},{"ruleId":"131","severity":1,"message":"132","line":30,"column":6,"nodeType":"133","endLine":30,"endColumn":8,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":24,"column":6,"nodeType":"133","endLine":24,"endColumn":29,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":28,"column":17,"nodeType":"138","endLine":28,"endColumn":40},{"ruleId":"124","severity":1,"message":"139","line":1,"column":42,"nodeType":"126","messageId":"127","endLine":1,"endColumn":51},{"ruleId":"131","severity":1,"message":"140","line":35,"column":6,"nodeType":"133","endLine":35,"endColumn":41,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":44,"column":11,"nodeType":"138","endLine":44,"endColumn":33},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["144"],["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchUserInfo' and 'userInfo'. Either include them or remove the dependency array. If 'dispatchUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},"Update the dependencies array to be: [props, props.match.params.id]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatchUserInfo, userInfo, userInfo.data.data.githubUsername]",{"range":"157","text":"158"},[928,930],"[props]",[708,731],"[props, props.match.params.id]",[974,1009],"[dispatchUserInfo, userInfo, userInfo.data.data.githubUsername]"]