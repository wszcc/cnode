[{"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx":"1","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts":"2","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx":"3","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts":"4","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx":"5","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts":"6","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx":"7","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts":"8","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts":"9","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts":"10","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts":"11","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts":"12","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts":"13","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx":"14","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx":"15","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts":"16","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx":"17","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx":"18","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx":"19","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx":"20","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx":"21","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx":"22","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts":"23","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx":"24","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx":"25","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\mycollect\\myCollect.tsx":"26","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\edittheme\\editTheme.tsx":"27","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\message\\Message.tsx":"28"},{"size":595,"mtime":1608736945793,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1608479304781,"results":"31","hashOfConfig":"30"},{"size":259,"mtime":1608958652971,"results":"32","hashOfConfig":"30"},{"size":1151,"mtime":1609084975959,"results":"33","hashOfConfig":"30"},{"size":587,"mtime":1609123612532,"results":"34","hashOfConfig":"30"},{"size":853,"mtime":1609125154644,"results":"35","hashOfConfig":"30"},{"size":1699,"mtime":1608809813963,"results":"36","hashOfConfig":"30"},{"size":359,"mtime":1608558895221,"results":"37","hashOfConfig":"30"},{"size":1479,"mtime":1609085013188,"results":"38","hashOfConfig":"30"},{"size":699,"mtime":1609065911439,"results":"39","hashOfConfig":"30"},{"size":1120,"mtime":1609085032435,"results":"40","hashOfConfig":"30"},{"size":2287,"mtime":1609085022161,"results":"41","hashOfConfig":"30"},{"size":1126,"mtime":1609065802307,"results":"42","hashOfConfig":"30"},{"size":2351,"mtime":1609085243275,"results":"43","hashOfConfig":"30"},{"size":2983,"mtime":1609124832266,"results":"44","hashOfConfig":"30"},{"size":960,"mtime":1608691560363,"results":"45","hashOfConfig":"30"},{"size":329,"mtime":1608824097986,"results":"46","hashOfConfig":"30"},{"size":1677,"mtime":1609085430044,"results":"47","hashOfConfig":"30"},{"size":2286,"mtime":1609065005610,"results":"48","hashOfConfig":"30"},{"size":2275,"mtime":1609080909038,"results":"49","hashOfConfig":"30"},{"size":3490,"mtime":1609124958575,"results":"50","hashOfConfig":"30"},{"size":4366,"mtime":1609125069607,"results":"51","hashOfConfig":"30"},{"size":188,"mtime":1608796405720,"results":"52","hashOfConfig":"30"},{"size":5244,"mtime":1609123566603,"results":"53","hashOfConfig":"30"},{"size":3819,"mtime":1609124348252,"results":"54","hashOfConfig":"30"},{"size":2196,"mtime":1608966189135,"results":"55","hashOfConfig":"30"},{"size":4258,"mtime":1609124602930,"results":"56","hashOfConfig":"30"},{"size":3822,"mtime":1609124869124,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1j9vyrn",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx",[],["119","120"],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx",["121"],"import React, { useEffect, useState, memo } from \"react\";\r\nimport \"./home.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { getHomePageDate } from \"../../store/actionCreator\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport Card from \"./card/Card\";\r\nimport RightContent from \"./rightcomtent/RightComtent\";\r\ntype propsType = {\r\n  name?: string;\r\n  requestHomePageData: (params: requestParamsType) => void;\r\n  requestUserInfo: (params: requestParamsType) => void;\r\n  homeData: AxiosResponse;\r\n};\r\ntype requestParamsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\nconst Home: React.FC<propsType> = (props) => {\r\n  const [homeDataArr, setHomeDataArr] = useState<any | null>(null);\r\n  useEffect(() => {\r\n    props.requestHomePageData({\r\n      url: \"topics\",\r\n      type: \"GET\",\r\n      data: {\r\n        mdrender: false,\r\n      },\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setHomeDataArr(props.homeData ? props.homeData.data.data : null);\r\n  }, [props.homeData]);\r\n  return (\r\n    <div className=\"home\">\r\n      <Navigation />\r\n      <Card\r\n        cardDataArr={homeDataArr}\r\n        changeContent={props.requestHomePageData}\r\n      />\r\n      <RightContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    homeData: state.homePageDate,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    requestHomePageData(requestParams: requestParamsType): void {\r\n      const getHomePageDateAction = getHomePageDate(requestParams);\r\n      dispatch(getHomePageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Home));\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx",["122"],"import React, { useEffect } from \"react\";\r\nimport \"./topicdetail.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetailPageDate } from \"../../store/actionCreator\";\r\nimport { Card } from \"antd\";\r\nimport Header from \"./Header\";\r\nimport Replies from \"./replies/Replies\";\r\nimport { accessToken } from \"../../store/actionTypes\";\r\ntype propsType = {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n  dispatchDetailDataAction: (payload: object) => void;\r\n  detailData: any;\r\n};\r\n\r\nconst TopicDetail: React.FC<propsType> = (props: propsType) => {\r\n  const paramsStr=props.match.params.id\r\n  const [topicId,isEdit=false] =paramsStr.split('-')\r\n  useEffect(() => {\r\n    props.dispatchDetailDataAction({\r\n      url: `/topic/${topicId}`,\r\n      type: \"GET\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n      },\r\n    });\r\n  },[props.match.params.id]);\r\n   \r\n  return (\r\n    <div className=\"topic-detail\">\r\n      <Navigation />\r\n      {props.detailData ? (\r\n        <>\r\n          <Header  isEdit={isEdit} titleData={props.detailData} />\r\n          <Card\r\n            title={\"\"}\r\n            bordered={false}\r\n            style={{ width: 1270, marginLeft: 70 }}\r\n          >\r\n            {props.detailData ? (\r\n              <div\r\n                className=\"center-card\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: props.detailData.data.data.content,\r\n                }}\r\n              ></div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n          <Replies\r\n            repliesCount={props.detailData.data.data.reply_count}\r\n            repliesArr={props.detailData.data.data.replies}\r\n            topic_id={props.detailData.data.data.id}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    detailData: state.detailData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchDetailDataAction(payload: object) {\r\n      const getDetailPageDateAction = getDetailPageDate(payload);\r\n      dispatch(getDetailPageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicDetail);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx",["123"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { getUserInfo } from \"../../store/actionCreator\";\r\nimport RightContent from \"../home/rightcomtent/RightComtent\";\r\nimport ProfileImg from \"../../assets/imgs/profile.png\";\r\nimport getTime from \"../../utils/getTime\";\r\nimport { Card } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserCollectTheme } from \"../../store/actionCreator\";\r\ntype paramsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\n\r\ntype propsType = {\r\n  userInfo: AxiosResponse;\r\n  dispatchUserInfo: (payload: paramsType) => void;\r\n  dispatchUserCollect: (payload: paramsType) => void;\r\n  collectTheme: AxiosResponse;\r\n};\r\n\r\nconst Profile: React.FC<propsType> = ({\r\n  userInfo = { data: { data: { githubUsername: \"zc\" } } },\r\n  dispatchUserInfo,\r\n  dispatchUserCollect,\r\n  collectTheme = { data: { success: false, data: [] } },\r\n}) => {\r\n  useEffect(() => {\r\n    dispatchUserInfo({\r\n      url: \"/user/wszcc\",\r\n      type: \"GET\",\r\n      data: {},\r\n    });\r\n    dispatchUserCollect({\r\n      url: \"/topic_collect/wszcc\",\r\n      type: \"GET\",\r\n      data: {},\r\n    });\r\n  }, [userInfo.data.data.githubUsername, collectTheme.data.success]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <Navigation />\r\n      <RightContent />\r\n      {userInfo.data.data.githubUsername === \"wszcc\" ? (\r\n        <>\r\n          <Card\r\n            title=\"主页\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            <p className=\"profile-img\">\r\n              <img src={ProfileImg} alt=\"\" />\r\n              <span>{userInfo.data.data.loginname}</span>\r\n            </p>\r\n            <Link to=\"/mycollect\">\r\n              <p>我的收藏 {collectTheme.data.data.length}</p>\r\n            </Link>\r\n            <p>{userInfo.data.data.score} 积分</p>\r\n            <p>注册时间 {getTime(userInfo.data.data.create_at)}</p>\r\n          </Card>\r\n          <Card\r\n            title=\"最近创建的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {userInfo.data.data.recent_topics\r\n              ? userInfo.data.data.recent_topics.map((item: any) => (\r\n                  <li className=\"item\" key={item.id}>\r\n                    <div className=\"img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"type\">\r\n                      {item.top ? (\r\n                        <span className=\"top\">置顶</span>\r\n                      ) : (\r\n                        <span className=\"share\">分享</span>\r\n                      )}\r\n                    </span>\r\n                    <Link to={`/topic/detail/${item.id}-${true}`}>\r\n                      <span className=\"context\">{item.title}</span>\r\n                    </Link>\r\n                    <div className=\"left-img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"time\">{getTime(item.create_at)}</span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </Card>\r\n          <Card\r\n            title=\"最近参与的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {userInfo.data.data.recent_replies\r\n              ? userInfo.data.data.recent_replies.map((item: any) => (\r\n                  <li className=\"item\" key={item.id}>\r\n                    <div className=\"img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"type\">\r\n                      {item.top ? (\r\n                        <span className=\"top\">置顶</span>\r\n                      ) : (\r\n                        <span className=\"share\">分享</span>\r\n                      )}\r\n                    </span>\r\n                    <Link to={`/topic/detail/${item.id}`}>\r\n                      <span className=\"context\">{item.title}</span>\r\n                    </Link>\r\n                    <div className=\"left-img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"time\">{getTime(item.last_reply_at)}</span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    userInfo: state.userInfo,\r\n    collectTheme: state.collectTheme,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchUserInfo(payload: paramsType) {\r\n      const disUserInfoAction = getUserInfo(payload);\r\n      dispatch(disUserInfoAction);\r\n    },\r\n    dispatchUserCollect(payload: paramsType) {\r\n      const disUserCollectAction = getUserCollectTheme(payload);\r\n      dispatch(disUserCollectAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\mycollect\\myCollect.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\edittheme\\editTheme.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\message\\Message.tsx",["124"],"import React, { useEffect } from \"react\";\r\nimport \"./message.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport RightComtent from \"../home/rightcomtent/RightComtent\";\r\nimport { Card } from \"antd\";\r\nimport { getMessage } from \"../../store/actionCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport { accessToken } from \"../../store/actionTypes\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport hasReadMessage from \"../../apis/index\";\r\n\r\ntype propsType = {\r\n  message: any;\r\n  dispatchReqMessage: (params: any) => void;\r\n};\r\n\r\nconst Message: React.FC<propsType & RouteComponentProps> = (props) => {\r\n  const { message = \"\", dispatchReqMessage } = props;\r\n  useEffect(() => {\r\n    dispatchReqMessage({\r\n      url: \"/messages\",\r\n      type: \"GET\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n      },\r\n    });\r\n  }, []);\r\n  function handleHasRead(id: string) {\r\n    props.history.push(`/topic/detail/${id}-${true}`);\r\n  }\r\n  function handleHasNotRead(id: string, messageId: string) {\r\n    hasReadMessage({\r\n      url: `/message/mark_one/${messageId}`,\r\n      type: \"POST\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n      },\r\n    });\r\n    props.history.push(`/topic/detail/${id}-${true}`);\r\n  }\r\n  return (\r\n    <div className=\"message\">\r\n      <Navigation />\r\n      <RightComtent />\r\n      {message ? (\r\n        <>\r\n          <Card\r\n            title={`新消息 ${message.data.data.hasnot_read_messages.length} 条`}\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {message.data.data.hasnot_read_messages.length\r\n              ? message.data.data.hasnot_read_messages.map(\r\n                  (item: any, index: number) => (\r\n                    <p key={index} className=\"item\">\r\n                      {item.author.loginname}\r\n                      &nbsp;&nbsp;回复了你的&nbsp;\r\n                      <span\r\n                        className=\"title\"\r\n                        onClick={() => {\r\n                          handleHasNotRead(item.topic.id, item.id);\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {item.topic.title}\r\n                      </span>\r\n                    </p>\r\n                  )\r\n                )\r\n              : \"无消息\"}\r\n            {}\r\n          </Card>\r\n          <Card\r\n            title={`过往消息 ${message.data.data.has_read_messages.length} 条`}\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {message.data.data.has_read_messages.length\r\n              ? message.data.data.has_read_messages.map(\r\n                  (item: any, index: number) => (\r\n                    <p key={index} className=\"item\">\r\n                      {item.author.loginname}\r\n                      &nbsp;&nbsp;回复了你的&nbsp;\r\n                      <span\r\n                        className=\"title\"\r\n                        onClick={() => {\r\n                          handleHasRead(item.topic.id);\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {item.topic.title}\r\n                      </span>\r\n                    </p>\r\n                  )\r\n                )\r\n              : \"无消息\"}\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state: any) => {\r\n  return {\r\n    message: state.message,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: any) => {\r\n  return {\r\n    dispatchReqMessage(params: any) {\r\n      const disMessageAction = getMessage(params);\r\n      dispatch(disMessageAction);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(withRouter(Message));\r\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":31,"column":5,"nodeType":"131","endLine":31,"endColumn":28,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":43,"column":6,"nodeType":"131","endLine":43,"endColumn":68,"suggestions":"136"},{"ruleId":"129","severity":1,"message":"137","line":27,"column":6,"nodeType":"131","endLine":27,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'props' and 'topicId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["142"],"React Hook useEffect has missing dependencies: 'dispatchUserCollect' and 'dispatchUserInfo'. Either include them or remove the dependency array. If 'dispatchUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["143"],"React Hook useEffect has a missing dependency: 'dispatchReqMessage'. Either include it or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},"Update the dependencies array to be: [props, props.match.params.id, topicId]",{"range":"155","text":"156"},"Update the dependencies array to be: [userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatchReqMessage]",{"range":"159","text":"160"},[928,930],"[props]",[911,934],"[props, props.match.params.id, topicId]",[1290,1352],"[userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]",[883,885],"[dispatchReqMessage]"]