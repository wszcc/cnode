[{"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx":"1","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts":"2","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx":"3","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts":"4","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx":"5","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts":"6","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx":"7","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts":"8","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts":"9","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts":"10","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts":"11","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts":"12","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts":"13","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx":"14","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx":"15","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts":"16","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx":"17","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx":"18","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx":"19","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx":"20","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx":"21","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx":"22","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts":"23","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx":"24","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx":"25","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\mycollect\\myCollect.tsx":"26","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\edittheme\\editTheme.tsx":"27"},{"size":595,"mtime":1608736945793,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1608479304781,"results":"30","hashOfConfig":"29"},{"size":259,"mtime":1608958652971,"results":"31","hashOfConfig":"29"},{"size":1151,"mtime":1608961638825,"results":"32","hashOfConfig":"29"},{"size":595,"mtime":1608713741674,"results":"33","hashOfConfig":"29"},{"size":712,"mtime":1609000511795,"results":"34","hashOfConfig":"29"},{"size":1699,"mtime":1608809813963,"results":"35","hashOfConfig":"29"},{"size":359,"mtime":1608558895221,"results":"36","hashOfConfig":"29"},{"size":1088,"mtime":1608996439078,"results":"37","hashOfConfig":"29"},{"size":612,"mtime":1608962664226,"results":"38","hashOfConfig":"29"},{"size":783,"mtime":1608996418468,"results":"39","hashOfConfig":"29"},{"size":1876,"mtime":1608962573590,"results":"40","hashOfConfig":"29"},{"size":834,"mtime":1608963286261,"results":"41","hashOfConfig":"29"},{"size":2114,"mtime":1608958784704,"results":"42","hashOfConfig":"29"},{"size":2983,"mtime":1608809530542,"results":"43","hashOfConfig":"29"},{"size":960,"mtime":1608691560363,"results":"44","hashOfConfig":"29"},{"size":329,"mtime":1608824097986,"results":"45","hashOfConfig":"29"},{"size":1722,"mtime":1608960158060,"results":"46","hashOfConfig":"29"},{"size":2286,"mtime":1608822082409,"results":"47","hashOfConfig":"29"},{"size":2267,"mtime":1608999198545,"results":"48","hashOfConfig":"29"},{"size":2926,"mtime":1609000386784,"results":"49","hashOfConfig":"29"},{"size":3571,"mtime":1608992443958,"results":"50","hashOfConfig":"29"},{"size":188,"mtime":1608796405720,"results":"51","hashOfConfig":"29"},{"size":5178,"mtime":1608998128259,"results":"52","hashOfConfig":"29"},{"size":3455,"mtime":1608993813549,"results":"53","hashOfConfig":"29"},{"size":2196,"mtime":1608966189135,"results":"54","hashOfConfig":"29"},{"size":17,"mtime":1609000432424,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1j9vyrn",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\index.tsx",[],["118","119"],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\reportWebVitals.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\App.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\apis\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\index.tsx",["120"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\ntype routerItemType = {\r\n  path: string;\r\n  component: any;\r\n};\r\n\r\nconst RouterView: React.FC = (): any => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item: routerItemType,index:number) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\router\\config.ts",["121"],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\Home.tsx",["122"],"import React, { useEffect, useState, memo } from \"react\";\r\nimport \"./home.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { getHomePageDate } from \"../../store/actionCreator\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport Card from \"./card/Card\";\r\nimport RightContent from \"./rightcomtent/RightComtent\";\r\ntype propsType = {\r\n  name?: string;\r\n  requestHomePageData: (params: requestParamsType) => void;\r\n  requestUserInfo: (params: requestParamsType) => void;\r\n  homeData: AxiosResponse;\r\n};\r\ntype requestParamsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\nconst Home: React.FC<propsType> = (props) => {\r\n  const [homeDataArr, setHomeDataArr] = useState<any | null>(null);\r\n  useEffect(() => {\r\n    props.requestHomePageData({\r\n      url: \"topics\",\r\n      type: \"GET\",\r\n      data: {\r\n        mdrender: false,\r\n      },\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    setHomeDataArr(props.homeData ? props.homeData.data.data : null);\r\n  }, [props.homeData]);\r\n  return (\r\n    <div className=\"home\">\r\n      <Navigation />\r\n      <Card\r\n        cardDataArr={homeDataArr}\r\n        changeContent={props.requestHomePageData}\r\n      />\r\n      <RightContent />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    homeData: state.homePageDate,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    requestHomePageData(requestParams: requestParamsType): void {\r\n      const getHomePageDateAction = getHomePageDate(requestParams);\r\n      dispatch(getHomePageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Home));\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\index.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\reducer.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\roootSaga.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionTypes.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\createSagaAction.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\store\\actionCreator.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\components\\navigation\\Navigation.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\card\\Card.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\getTime.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\RightComtent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\TopContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\home\\rightcomtent\\BodyContent.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\TopicDetail.tsx",["123"],"import React, { useEffect } from \"react\";\r\nimport \"./topicdetail.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetailPageDate } from \"../../store/actionCreator\";\r\nimport { Card } from \"antd\";\r\nimport Header from \"./Header\";\r\nimport Replies from \"./replies/Replies\";\r\nimport { accessToken } from \"../../store/actionTypes\";\r\ntype propsType = {\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n  dispatchDetailDataAction: (payload: object) => void;\r\n  detailData: any;\r\n};\r\nconst TopicDetail: React.FC<propsType> = (props: propsType) => {\r\n  const paramsStr=props.match.params.id\r\n  const [topicId,isEdit=false] =paramsStr.split('-')\r\n  useEffect(() => {\r\n    props.dispatchDetailDataAction({\r\n      url: `/topic/${topicId}`,\r\n      type: \"GET\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n      },\r\n    });\r\n  },[props.match.params.id]);\r\n  return (\r\n    <div className=\"topic-detail\">\r\n      <Navigation />\r\n      {props.detailData ? (\r\n        <>\r\n          <Header isEdit={isEdit} titleData={props.detailData} />\r\n          <Card\r\n            title={\"\"}\r\n            bordered={false}\r\n            style={{ width: 1270, marginLeft: 70 }}\r\n          >\r\n            {props.detailData ? (\r\n              <div\r\n                className=\"center-card\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: props.detailData.data.data.content,\r\n                }}\r\n              ></div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card>\r\n          <Replies\r\n            repliesCount={props.detailData.data.data.reply_count}\r\n            repliesArr={props.detailData.data.data.replies}\r\n            topic_id={props.detailData.data.data.id}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    detailData: state.detailData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchDetailDataAction(payload: object) {\r\n      const getDetailPageDateAction = getDetailPageDate(payload);\r\n      dispatch(getDetailPageDateAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicDetail);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\Header.tsx",["124","125"],"import React, { ReactNode, useState } from \"react\";\r\nimport getTime from \"../../utils/getTime\";\r\nimport { connect } from \"react-redux\";\r\nimport requestCollect from \"../../apis/index\";\r\nimport requestCancelCollect from \"../../apis/index\";\r\nimport { accessToken } from \"../../store/actionTypes\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport { withRouter,RouteComponentProps } from 'react-router-dom'\r\n\r\ntype propsType = {\r\n  titleData: any;\r\n  isLogin: boolean;\r\n  isEdit: any;\r\n};\r\n\r\nconst Header: React.FC<propsType&RouteComponentProps> = (props) => {\r\n  const { titleData, isLogin, isEdit }=props\r\n  console.log(isEdit);\r\n  const [jusIsCollect, setIsCollect] = useState(titleData.data.data.is_collect);\r\n  // 判断收藏按钮状态\r\n  function isCollect(isLogin: boolean, isCollect: boolean): ReactNode {\r\n    if (!isLogin) {\r\n      return \"\";\r\n    } else {\r\n      if (isCollect) {\r\n        return (\r\n          <a className=\"cancelCollect\" onClick={handelCancelCollect}>\r\n            取消收藏\r\n          </a>\r\n        );\r\n      } else {\r\n        return (\r\n          <a className=\"collect\" onClick={handleCollect}>\r\n            收藏\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  const handleEditClick=()=>{\r\n      props.history.push('/edit-theme')\r\n  }\r\n  const handleCollect = async () => {\r\n    requestCollect({\r\n      url: \"/topic_collect/collect\",\r\n      type: \"POST\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n        topic_id: titleData.data.data.id,\r\n      },\r\n    });\r\n    setIsCollect(!jusIsCollect);\r\n  };\r\n  const handelCancelCollect = () => {\r\n    requestCancelCollect({\r\n      url: \"/topic_collect/de_collect\",\r\n      type: \"POST\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n        topic_id: titleData.data.data.id,\r\n      },\r\n    });\r\n    setIsCollect(!jusIsCollect);\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"title\">\r\n        {titleData && titleData.data.data.top ? (\r\n          <span className=\"top\">置顶</span>\r\n        ) : (\r\n          <span className=\"share\">分享</span>\r\n        )}\r\n        {titleData ? titleData.data.data.title : \"\"}\r\n      </div>\r\n      <div className=\"info\">\r\n        {titleData &&\r\n          `●发布于 ${getTime(titleData.data.data.create_time)} ●作者 ${\r\n            titleData.data.data.author.loginname\r\n          } ●${titleData.data.data.visit_count} 次浏览`}\r\n        <div className=\"edit\">\r\n          {isEdit ? (\r\n            <EditOutlined\r\n              onClick={handleEditClick}\r\n              style={{\r\n                color: \"black\",\r\n                fontSize: 20,\r\n              }}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isCollect(isLogin, jusIsCollect)}\r\n    </div>\r\n  );\r\n};\r\nconst mapState = (state: any) => {\r\n  return {\r\n    isLogin: state.isLogin,\r\n  };\r\n};\r\nexport default connect(mapState)(withRouter(Header));\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\topicdetail\\replies\\Replies.tsx",["126"],"import React, { createElement, useState, useRef } from \"react\";\r\nimport { Comment, Tooltip, Avatar, Card, Input } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport getTime from \"../../../utils/getTime\";\r\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\";\r\nimport requestReply from \"../../../apis/index\";\r\nimport { accessToken } from \"../../../store/actionTypes\";\r\nconst { TextArea } = Input;\r\n\r\ntype propsType = {\r\n  repliesCount: number;\r\n  repliesArr: any[];\r\n  isLogin: boolean;\r\n  topic_id: string;\r\n};\r\n\r\nconst Replies: React.FC<propsType> = (props) => {\r\n  const [likes, setLikes] = useState<number | string>(0);\r\n  const [action, setAction] = useState<null | string>(null);\r\n  const [repliesArr, setRepliesArr] = useState(props.repliesArr);\r\n  const [replyCount, setReplyCount] = useState(props.repliesArr.length);\r\n  const like = () => {\r\n    setLikes(1);\r\n    setAction(\"liked\");\r\n  };\r\n  function handleReply() {\r\n    const inputElement: any = document.getElementById(\"input-textarea\");\r\n    const inputInfo = {\r\n      author: {\r\n        loginname: \"wszcc\",\r\n        avatar_url:\r\n          \"https://avatars2.githubusercontent.com/u/68904051?v=4&s=120\",\r\n      },\r\n      content: `<div class='markdown-text'><p>${inputElement.value}</p>↵</div>`,\r\n      create_at: new Date(),\r\n      id: \"5fe6ee2698427e04f76aa82b\",\r\n      is_uped: false,\r\n      reply_id: null,\r\n    };\r\n    requestReply({\r\n      url: `/topic/${props.topic_id}/replies`,\r\n      type: \"POST\",\r\n      data: {\r\n        accesstoken: accessToken,\r\n        content: inputElement.value,\r\n      },\r\n    });\r\n\r\n    setRepliesArr((repliesArr) => [...repliesArr, inputInfo]);\r\n    setReplyCount(replyCount + 1);\r\n  }\r\n\r\n  const actions = props.isLogin\r\n    ? [\r\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n          <span onClick={like}>\r\n            {createElement(action === \"liked\" ? LikeFilled : LikeOutlined)}\r\n            <span className=\"comment-action\">{likes}</span>\r\n          </span>\r\n        </Tooltip>,\r\n      ]\r\n    : [];\r\n  return (\r\n    <div className=\"repiles\">\r\n      <Card\r\n        title={`${replyCount} 回复`}\r\n        bordered={false}\r\n        style={{ width: 1270, marginLeft: 70 }}\r\n      >\r\n        {repliesArr.map((item, index) => (\r\n          <Comment\r\n            key={index}\r\n            actions={actions}\r\n            author={item.author.loginname}\r\n            avatar={\r\n              <Avatar\r\n                src={item.author.avatar_url}\r\n                alt={item.author.loginname}\r\n              />\r\n            }\r\n            content={\r\n              <p\r\n                key={index}\r\n                dangerouslySetInnerHTML={{ __html: item.content }}\r\n              ></p>\r\n            }\r\n            datetime={\r\n              <Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\r\n                <span>{getTime(item.create_at)}</span>\r\n              </Tooltip>\r\n            }\r\n          />\r\n        ))}\r\n      </Card>\r\n      {props.isLogin ? (\r\n        <>\r\n          <div className=\"input-header\">添加回复</div>\r\n          <TextArea\r\n            style={{ width: 1270, marginLeft: 70, border: \"none\" }}\r\n            rows={8}\r\n            id=\"input-textarea\"\r\n          />\r\n          <div className=\"input-button\">\r\n            <button onClick={handleReply}>回复</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state: any) => {\r\n  return {\r\n    isLogin: state.isLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapState)(Replies);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\utils\\isLogin.ts",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\profile\\Profile.tsx",["127"],"import React, { useEffect } from \"react\";\r\nimport \"./profile.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { getUserInfo } from \"../../store/actionCreator\";\r\nimport RightContent from \"../home/rightcomtent/RightComtent\";\r\nimport ProfileImg from \"../../assets/imgs/profile.png\";\r\nimport getTime from \"../../utils/getTime\";\r\nimport { Card } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserCollectTheme } from \"../../store/actionCreator\";\r\ntype paramsType = {\r\n  url: string;\r\n  type: string;\r\n  data: object;\r\n};\r\n\r\ntype propsType = {\r\n  userInfo: AxiosResponse;\r\n  dispatchUserInfo: (payload: paramsType) => void;\r\n  dispatchUserCollect: (payload: paramsType) => void;\r\n  collectTheme: AxiosResponse;\r\n};\r\n\r\nconst Profile: React.FC<propsType> = ({\r\n  userInfo = { data: { data: { githubUsername: \"zc\" } } },\r\n  dispatchUserInfo,\r\n  dispatchUserCollect,\r\n  collectTheme = { data: { success: false ,data:[]} },\r\n}) => {\r\n  useEffect(() => {\r\n    dispatchUserInfo({\r\n      url: \"/user/wszcc\",\r\n      type: \"GET\",\r\n      data: {},\r\n    });\r\n    dispatchUserCollect({\r\n      url: \"/topic_collect/wszcc\",\r\n      type: \"GET\",\r\n      data: {},\r\n    });\r\n  }, [userInfo.data.data.githubUsername, collectTheme.data.success]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <Navigation />\r\n      <RightContent />\r\n      {userInfo.data.data.githubUsername === \"wszcc\" ? (\r\n        <>\r\n          <Card\r\n            title=\"主页\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            <p className=\"profile-img\">\r\n              <img src={ProfileImg} alt=\"\" />\r\n              <span>{userInfo.data.data.loginname}</span>\r\n            </p>\r\n            <Link to='/mycollect'><p>我的收藏 {collectTheme.data.data.length}</p></Link>\r\n            <p>{userInfo.data.data.score} 积分</p>\r\n            <p>注册时间 {getTime(userInfo.data.data.create_at)}</p>\r\n          </Card>\r\n          <Card\r\n            title=\"最近创建的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {userInfo.data.data.recent_topics\r\n              ? userInfo.data.data.recent_topics.map((item: any) => (\r\n                  <li key={item.id}>\r\n                    <div className=\"img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"type\">\r\n                      {item.top ? (\r\n                        <span className=\"top\">置顶</span>\r\n                      ) : (\r\n                        <span className=\"share\">分享</span>\r\n                      )}\r\n                    </span>\r\n                    <Link to={`/topic/detail/${item.id}-${true}`}>\r\n                      <span className=\"context\">{item.title}</span>\r\n                    </Link>\r\n                    <div className=\"left-img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"time\">{getTime(item.create_at)}</span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </Card>\r\n          <Card\r\n            title=\"最近参与的话题\"\r\n            bordered={false}\r\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\r\n          >\r\n            {userInfo.data.data.recent_replies\r\n              ? userInfo.data.data.recent_replies.map((item: any) => (\r\n                  <li key={item.id}>\r\n                    <div className=\"img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"type\">\r\n                      {item.top ? (\r\n                        <span className=\"top\">置顶</span>\r\n                      ) : (\r\n                        <span className=\"share\">分享</span>\r\n                      )}\r\n                    </span>\r\n                    <Link to={`/topic/detail/${item.id}`}>\r\n                      <span className=\"context\">{item.title}</span>\r\n                    </Link>\r\n                    <div className=\"left-img\">\r\n                      <img src={item.author.avatar_url} alt=\"\" />\r\n                    </div>\r\n                    <span className=\"time\">{getTime(item.last_reply_at)}</span>\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    userInfo: state.userInfo,\r\n    collectTheme: state.collectTheme,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    dispatchUserInfo(payload: paramsType) {\r\n      const disUserInfoAction = getUserInfo(payload);\r\n      dispatch(disUserInfoAction);\r\n    },\r\n    dispatchUserCollect(payload: paramsType) {\r\n      const disUserCollectAction = getUserCollectTheme(payload);\r\n      dispatch(disUserCollectAction);\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\createtheme\\createTheme.tsx",["128"],"import React from \"react\";\r\nimport \"./createTheme.scss\";\r\nimport E from \"wangeditor\";\r\nimport { Select, Card, Input } from \"antd\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { accessToken } from \"../../store/actionTypes\";\r\nimport requestCreateTheme from '../../apis/index'\r\nconst { Option } = Select;\r\ntype createThemeTypes = {\r\n  accesstoken: string;\r\n  title: string;\r\n  tab: string;\r\n  content: string;\r\n};\r\ntype stateType={\r\n  accesstoken: string,\r\n      title:string,\r\n      tab: string,\r\n      content: string,\r\n      editor:any\r\n}\r\ntype propsType={\r\n\r\n}\r\nclass createTheme extends React.Component<propsType,stateType> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      accesstoken: accessToken,\r\n      title: \"\",\r\n      tab: \"分享\",\r\n      content: \"\",\r\n      editor:null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const editor=new E(\"#edit\")\r\n    editor.config.zIndex = 100;\r\n    editor.create();\r\n    this.setState({editor})\r\n  }\r\n  async dispatchCreateTheme(params:createThemeTypes){\r\n    const res=await requestCreateTheme({\r\n      url:'/topics',type:'POST',data:params\r\n    })\r\n    console.log(res)\r\n  }\r\n  createTheme = () => {\r\n    this.setState({\r\n      content:this.state.editor.txt.text()\r\n    },()=>{\r\n      const {accesstoken,title,tab,content}=this.state\r\n      this.dispatchCreateTheme({accesstoken,title,tab,content})\r\n    })\r\n  };\r\n  handleTabChange = (value: string) => {\r\n    this.setState({\r\n      tab: value,\r\n    });\r\n  };\r\n  handleTitleChange = (e: any) => {\r\n    this.setState({\r\n      title: e.nativeEvent.data,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-theme\">\r\n        <Navigation />\r\n        <Card\r\n          title=\"发布话题\"\r\n          style={{ width: 1120, marginTop: 20, marginLeft: 70 }}\r\n        >\r\n          <div>\r\n            选择板块&nbsp; &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"分享\"\r\n              style={{ width: 120, zIndex: 1000 }}\r\n              onChange={this.handleTabChange}\r\n            >\r\n              <Option value=\"share\">分享</Option>\r\n              <Option value=\"ask\">问答</Option>\r\n              <Option value=\"job\">招聘</Option>\r\n              <Option value=\"good\">客户端测试</Option>\r\n            </Select>\r\n          </div>\r\n          <Input\r\n            placeholder=\"请输入标题\"\r\n            style={{ width: 1070, margin: 20, marginLeft: 0 }}\r\n            onChange={this.handleTitleChange}\r\n          />\r\n          <div id=\"edit\"></div>\r\n          <a className=\"submit\" onClick={this.createTheme}>提交</a>\r\n        </Card>\r\n        <div className=\"right-comtent\">\r\n          <Card\r\n            title=\"Markdown 语法参考\"\r\n            style={{ width: 260, marginTop: 20, marginLeft: 70 }}\r\n          >\r\n            <p>### 单行的标题</p>\r\n            <p>**粗体**</p>\r\n            <p>`console.log('行内代码')`</p>\r\n            <p>```js\\n code \\n``` 标记代码块</p>\r\n            <p>[内容](链接)</p>\r\n            <p>![文字说明](图片链接)</p>\r\n          </Card>\r\n          <Card\r\n            title=\"话题发布指南\"\r\n            style={{ width: 270, marginTop: 20, marginLeft: 70 }}\r\n          >\r\n            <p>尽量把话题要点浓缩到标题里</p>\r\n            <p>代码含义和报错可在 SegmentFault 提问</p>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default createTheme;\r\n","D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\mycollect\\myCollect.tsx",[],"D:\\FONTEND\\demos\\Nodejs\\my-app\\src\\pages\\edittheme\\editTheme.tsx",["129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":6,"column":3,"nodeType":"136","messageId":"137","endLine":6,"endColumn":11},{"ruleId":"138","severity":1,"message":"139","line":7,"column":1,"nodeType":"140","endLine":32,"endColumn":3},{"ruleId":"141","severity":1,"message":"142","line":30,"column":6,"nodeType":"143","endLine":30,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":30,"column":5,"nodeType":"143","endLine":30,"endColumn":28,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":27,"column":11,"nodeType":"149","endLine":27,"endColumn":70},{"ruleId":"147","severity":1,"message":"148","line":33,"column":11,"nodeType":"149","endLine":33,"endColumn":58},{"ruleId":"134","severity":1,"message":"150","line":1,"column":42,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"151","line":43,"column":6,"nodeType":"143","endLine":43,"endColumn":68,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"148","line":93,"column":11,"nodeType":"149","endLine":93,"endColumn":60},{"ruleId":"138","severity":1,"message":"153","line":1,"column":1,"nodeType":"140","endLine":1,"endColumn":18},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["156"],"React Hook useEffect has missing dependencies: 'props' and 'topicId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["157"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchUserCollect' and 'dispatchUserInfo'. Either include them or remove the dependency array. If 'dispatchUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [props]",{"range":"165","text":"166"},"Update the dependencies array to be: [props, props.match.params.id, topicId]",{"range":"167","text":"168"},"Update the dependencies array to be: [userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]",{"range":"169","text":"170"},[928,930],"[props]",[909,932],"[props, props.match.params.id, topicId]",[1288,1350],"[userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]"]